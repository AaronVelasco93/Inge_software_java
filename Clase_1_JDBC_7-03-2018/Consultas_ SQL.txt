SQL

	

	   //VER TODAS LAS DB -> BASES DE DATOS

		SHOW DATABASES

		

		

		//VER TABLAS DE LAS DB

		SHOW TABLES

		

		//DATOS DE LA DB

		

		SELECT USER(), CONNECTION_ID(),VERSION(),DATABASE();

		

		//VERSIÓN DE LA DB

		SELECT VERSION(),CURRENT_DATE;

		

		SELECT NOW();

		

		//ELIMINAR UNA BASE DE DATOS

		

		DROP DATABASE NOMBRE_BBDD;

		

		//ELIMINAR UNA TABLA

		

		DROP TABLE NOMBRE_TABLA

		

	//ESTRUCTURA

	CREATE TABLE "NOMBRE_TABLA"

	("COLUMNA 1" "TIPO_DE_DATOS_PARA_COLUMNA_1",

	"COLUMNA 2" "TIPO_DE_DATOS_PARA_COLUMNA_2",

	... );

	

		//EJEMPLO 1 

		

		CREATE TABLE COMENSALES

		(NOMBRE CHAR(50),

		PRIMER_APELLIDO CHAR(50),

		DIRECCION CHAR(50),

		CIUDAD CHAR(50),

		PAIS CHAR(25),CREATE TABLE COMENSALES

		(NOMBRE CHAR(50),

		PRIMER_APELLIDO CHAR(50),

		DIRECCION CHAR(50),

		CIUDAD CHAR(50),

		PAIS CHAR(25),

	

		FECHA DATETIME);

			

	

		//EJEMPLO 2

		CREATE TABLE CUSTOMER

		(FIRST_NAME CHAR(50),

		LAST_NAME CHAR(50),

		ADDRESS CHAR(50),

		CITY CHAR(50),

		COUNTRY CHAR(25),

		BIRTH_DATE DATETIME);

	

	

	

	//SELECT -> VISUALIZAR HACER CONSULTAS

	

		//SE PUEDE PONER LA TABLA DONDE PERTENECE LA COLUMNA

		

		SELECT CLIENTES.* FROM CLIENTES 

	

		SELECT * FROM CLIENTES

		

		SELECT `CODIGOCLIENTE` FROM CLIENTES

		

		SELECT CODIGOCLIENTE,EMPRESA,TELEFONO FROM CLIENTES 

		

	//ORDENAR POR EMPRESA ORDEN ALFABÉTICO

		

		SELECT CODIGOCLIENTE,EMPRESA,TELEFONO FROM CLIENTES ORDER BY EMPRESA

		

		

	

	//DISTINCT -> SE UTILIZA EN UN CONJUNTO CON SELECT PARA DELIMITAR TODOS LOS REGISTROS DUPLICADOS

	

		SELECT DISTINCT `POBLACION` FROM CLIENTES

		

	//LIMIT -> SE USA PARA LIMITAR UN NÚMERO DE REGISTROS A VISUALIZAR

	

		SELECT CODIGOCLIENTE, EMPRESA, RESPONSABLE FROM CLIENTES LIMIT 8

		

		SELECT CODIGOCLIENTE, EMPRESA, RESPONSABLE FROM CLIENTES LIMIT 4,9

		

			

	/*EMPIEZA A CONTAR DESDE 3 Y MUESTRA 5 REGISTROS-> SQL CUENTA DESDE 0

			SELECT * FROM CLIENTES LIMIT 3,5

			

			SELECT CLIENTES.DIRECCION FROM CLIENTES LIMIT 3,5

		

	//EJERCICIO

		SELECT EMPRESA,RESPONSABLE FROM CLIENTES ORDER BY EMPRESA LIMIT 10

		

	//WHERE-> SIRVE PARA EXTRAER CIERTOS REGISTROS BAJO UNA CONDICIÓN

		-> SELECT COLUMNA_ FROM NOMBRE_TABLA WHERE CONDICION_

		

		SELECT POBLACION,EMPRESA  FROM CLIENTES WHERE POBLACION="MADRID"

			/*SOLO LAS DE MADRID*/

		

		/*DIFERENTE DE MADRID*/

		

		SELECT POBLACION,EMPRESA  FROM CLIENTES WHERE POBLACION !="MADRID"

		

	//BETWEEN-> SELECCIONA VALORES DENTRO DE UN RANGO

		

		SELECT * FROM CLIENTES 

		WHERE CODIGOCLIENTE 

		BETWEEN 'CT01' AND 'CT15'

		

			SELECT * FROM CLIENTES

			WHERE CODIGOCLIENTE='CT01' 

			OR CODIGOCLIENTE ='CT05'

			

	// MOSTRAR VARIOS REGISTROS

		-> OR

		SELECT * FROM CLIENTES WHERE POBLACION ='MADRID' 

		OR POBLACION='SEVILLA' 

		OR POBLACION='LUGO' 

		ORDER BY POBLACION

		

		-> IN	** INCLUIR -> PARA NO INCLUIR ES NOT IN

		SELECT * FROM CLIENTES 

		WHERE POBLACION 

		IN ('MADRID','SEVILLA','LUGO') 

		ORDER BY POBLACION

		

		

		-> NOT IN 

		SELECT * FROM CLIENTES 

		WHERE POBLACION NOT IN ('MADRID','SEVILLA','LUGO')

		ORDER BY POBLACION

		

		

	//CONCAT-> CONECTAR DOS COLUMNAS 	

	

		SELECT CONCAT(CODIGOCLIENTE,' ', RESPONSABLE) FROM CLIENTES

		

		// AS SE LE DA UN NUEVO NOMBRE A LA COLUMNA

		-> AS

	

		SELECT CONCAT(CODIGOCLIENTE,' ', RESPONSABLE) AS DATOS_RES FROM CLIENTES

		

		/*

				/**SACAR EL IVA CON UNA MULTIPLICACION EN OTRA COLUMNA

			

			SELECT NOMBREARTICULO,SECCION, FECHA, PRECIO,PRECIO*0.16 AS IVA 

			FROM `PRODUCTOS` 

			ORDER BY NOMBREARTICULO

		*/

		

	-> LOWER =MINÚSCULA 

	-> UPPER = MAYÚSCULA

	

		SELECT NOMBREARTICULO,LOWER (SECCION) 

		AS SECCION_MIN FROM PRODUCTOS

		

	-> SACAR RAÍZ

			SELECT NOMBREARTICULO, SQRT(PRECIO) AS RAIZ 

			FROM `PRODUCTOS` WHERE 1

	

	-> AVG RETORNA EL PROMEDIO DE UNA COLUMNA

			SELECT NOMBREARTICULO, AVG(PRECIO) AS PROMEDIO 

			FROM `PRODUCTOS` WHERE 1

	

	-> SUM SUMA TOTAL

			SELECT NOMBREARTICULO, SUM(PRECIO) AS SUMA_TOTAL 

			FROM `PRODUCTOS` WHERE 1

			

	-> 'MIN' EL VALOR MÍNIMO

			SELECT NOMBREARTICULO, MIN(PRECIO) AS SUMA_TOTAL 

			FROM `PRODUCTOS` WHERE 1	

			

	-> LIKE //SE ESPECIFICA UNA CONDICIÓN DE BÚSQUEDA DENTRO DE UNA CLAUSULA

		

			SELECT * FROM CLIENTES WHERE RESPONSABLE LIKE 'A%'

			/*TODOS LOS REGISTROS QUE EMPIECEN CON A*/

			

			SELECT * FROM CLIENTES WHERE RESPONSABLE LIKE '__A%'

			/*EL EL TERCE CARACTER LLEVE LA LETRA 'A' _ _ A_ _ *

			

			SELECT * FROM CLIENTES WHERE RESPONSABLE LIKE '%A'

			/*TODOS LOS REGISTROS QUE TERMINEN CON 'A'*/

			

	//INSERT 

			FORMA BÁSICA:

	

	INSERT INTO ''TABLA'' (''COLUMNA1'', [''COLUMNA2,... '']) 

	VALUES (''VALOR1'', [''VALOR2,...''])

			

		INSERT INTO CLIENTES (`CODIGOCLIENTE`,`EMPRESA`,`DIRECCION`,`POBLACION`,`TELEFONO`) 

		

		VALUES('CT50','SAMP','XOCHIMILCO 15','CDMX',56418189) 	

		

		

	///DELETE

	

		DELETE FROM "NOMBRE_TABLA"

		WHERE "CONDICIÓN";

		

		DELETE FROM CLIENTES 

		WHERE EMPRESA='SAMP'

		

			SELECT * FROM CLIENTES 

			LIMIT 0,50

		

	//UPDATE -> MEDIFICAR UN REGISTRO

	

		UPDATE "NOMBRE_TABLA"

		SET "COLUMNA_1" = [NUEVO VALOR]

		WHERE "CONDICIÓN";

		

		

		UPDATE CLIENTES

		SET EMPRESA='SAMP_FESARAGON'

		WHERE CODIGOCLIENTE = 'CT50'

		AND DIRECCION = 'XOCHIMILCO 15';

		

